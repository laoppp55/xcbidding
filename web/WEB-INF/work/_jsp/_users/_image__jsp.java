/*
 * JSP generated by Resin-4.0.64 (built Tue, 11 Feb 2020 02:03:15 PST)
 */

package _jsp._users;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import javax.imageio.*;
import java.util.Random;
import java.awt.*;
import java.awt.image.BufferedImage;

public class _image__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;

  
      Color getRandColor(int fc, int bc) {//\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e8\u008c\u0083\u00e5\u009b\u00b4\u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e9\u00a2\u009c\u00e8\u0089\u00b2
          Random random = new Random();
          if (fc > 255) fc = 255;
          if (bc > 255) bc = 255;
          int r = fc + random.nextInt(bc - fc);
          int g = fc + random.nextInt(bc - fc);
          int b = fc + random.nextInt(bc - fc);
          return new Color(r, g, b);
      }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("image/jpeg");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    out.clear();
    //\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e9\u00a1\u00b5\u00e9\u009d\u00a2\u00e4\u00b8\u008d\u00e7\u00bc\u0093\u00e5\u00ad\u0098
    response.setHeader("Pragma", "No-cache");
    response.setHeader("Cache-Control", "no-cache");
    response.setDateHeader("Expires", 0);

// \u00e5\u009c\u00a8\u00e5\u0086\u0085\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u009b\u00be\u00e8\u00b1\u00a1
    int width = 70, height = 30;
    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);

// \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e5\u00bd\u00a2\u00e4\u00b8\u008a\u00e4\u00b8\u008b\u00e6\u0096\u0087
    Graphics g = image.getGraphics();

//\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u00b1\u00bb
    Random random = new Random();

// \u00e8\u00ae\u00be\u00e5\u00ae\u009a\u00e8\u0083\u008c\u00e6\u0099\u00af\u00e8\u0089\u00b2
    g.setColor(getRandColor(200, 250));
    g.fillRect(0, 0, width, height);

//\u00e8\u00ae\u00be\u00e5\u00ae\u009a\u00e5\u00ad\u0097\u00e4\u00bd\u0093
    g.setFont(new Font("Times New Roman", Font.PLAIN, 18));

//\u00e7\u0094\u00bb\u00e8\u00be\u00b9\u00e6\u00a1\u0086
//g.setColor(new Color());
//g.drawRect(0,0,width-1,height-1);

// \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e4\u00ba\u00a7\u00e7\u0094\u009f155\u00e6\u009d\u00a1\u00e5\u00b9\u00b2\u00e6\u0089\u00b0\u00e7\u00ba\u00bf\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e5\u009b\u00be\u00e8\u00b1\u00a1\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e8\u00ae\u00a4\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e4\u00b8\u008d\u00e6\u0098\u0093\u00e8\u00a2\u00ab\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e7\u00a8\u008b\u00e5\u00ba\u008f\u00e6\u008e\u00a2\u00e6\u00b5\u008b\u00e5\u0088\u00b0
    g.setColor(getRandColor(160, 200));
    for (int i = 0; i < 155; i++) {
        int x = random.nextInt(width);
        int y = random.nextInt(height);
        int xl = random.nextInt(12);
        int yl = random.nextInt(12);
        g.drawLine(x, y, x + xl, y + yl);
    }

// \u00e5\u008f\u0096\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e7\u009a\u0084\u00e8\u00ae\u00a4\u00e8\u00af\u0081\u00e7\u00a0\u0081(4\u00e4\u00bd\u008d\u00e6\u0095\u00b0\u00e5\u00ad\u0097)
    String sRand = "";
    for (int i = 0; i < 4; i++) {
        String rand = String.valueOf(random.nextInt(10));
        sRand += rand;
        // \u00e5\u00b0\u0086\u00e8\u00ae\u00a4\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e6\u0098\u00be\u00e7\u00a4\u00ba\u00e5\u0088\u00b0\u00e5\u009b\u00be\u00e8\u00b1\u00a1\u00e4\u00b8\u00ad
        g.setColor(new Color(20 + random.nextInt(110), 20 + random.nextInt(110), 20 + random.nextInt(110)));//\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e5\u0087\u00bd\u00e6\u0095\u00b0\u00e5\u0087\u00ba\u00e6\u009d\u00a5\u00e7\u009a\u0084\u00e9\u00a2\u009c\u00e8\u0089\u00b2\u00e7\u009b\u00b8\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e6\u0098\u00af\u00e5\u009b\u00a0\u00e4\u00b8\u00ba\u00e7\u00a7\u008d\u00e5\u00ad\u0090\u00e5\u00a4\u00aa\u00e6\u008e\u00a5\u00e8\u00bf\u0091\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e4\u00bb\u00a5\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e7\u0094\u009f\u00e6\u0088\u0090
        g.setFont(new Font("Tahoma", Font.BOLD, 20));
        g.drawString(rand, 13 * i + 6, 22);
    }

    Random r = new Random();
    //\u00e5\u00b9\u00b2\u00e6\u0089\u00b0\u00e7\u00ba\u00bf
    for(int i=0;i<10;i++){
        g.setColor(new Color(r.nextInt(256), r.nextInt(256), r.nextInt(256)));
        //\u00e7\u0094\u00bb\u00e7\u00ba\u00bf
        g.drawLine(r.nextInt(120), r.nextInt(30), r.nextInt(120), r.nextInt(30));
    }

// \u00e5\u00b0\u0086\u00e8\u00ae\u00a4\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e5\u00ad\u0098\u00e5\u0085\u00a5SESSION
    System.out.println("nRand==" + sRand);
    session.setAttribute("randnum", sRand);

// \u00e5\u009b\u00be\u00e8\u00b1\u00a1\u00e7\u0094\u009f\u00e6\u0095\u0088
    g.dispose();

// \u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e5\u009b\u00be\u00e8\u00b1\u00a1\u00e5\u0088\u00b0\u00e9\u00a1\u00b5\u00e9\u009d\u00a2
    ImageIO.write(image, "JPEG", response.getOutputStream());

    out.write(_jsp_string1, 0, _jsp_string1.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 8379650030320138497L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("users/image.jsp"), -2526046467143998621L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
  }
}
