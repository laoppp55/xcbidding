/*
 * JSP generated by Resin-4.0.64 (built Tue, 11 Feb 2020 02:03:15 PST)
 */

package _jsp._ec;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.jspsmart.upload.SmartUploadException;
import com.jspsmart.upload.SmartUpload;
import com.bizwink.util.SessionUtil;
import com.bizwink.security.Auth;
import org.springframework.context.ApplicationContext;
import com.bizwink.util.SpringInit;
import com.bizwink.po.BulletinNoticeWithBLOBs;
import com.bizwink.util.ParamUtil;
import com.bizwink.service.INoticeService;
import com.bizwink.cms.server.InitServer;
import java.io.File;

public class _download__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=UTF-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    Auth authToken = SessionUtil.getUserAuthorization(request, response, session);
    if (authToken==null) {
        response.sendRedirect("/users/login.jsp");   //\u9519\u8bef\u7801\u4e3a-1\u8868\u793a\u7528\u6237\u9700\u8981\u767b\u5f55\u7cfb\u7edf\u624d\u80fd\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c
        return;
    }
    String username = authToken.getUserid();
    String bulletinNotice_uuid = ParamUtil.getParameter(request,"uuid");
    BulletinNoticeWithBLOBs bulletinNotice = null;
    ApplicationContext appContext = SpringInit.getApplicationContext();
    if (appContext!=null) {
        //\u83b7\u53d6\u4e0b\u8f7d\u62db\u6807\u6587\u4ef6\u7684\u516c\u544a\u4fe1\u606f\uff0c\u5f97\u5230\u516c\u544a\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u79f0
        INoticeService noticeService = (INoticeService)appContext.getBean("noticeService");
        bulletinNotice = noticeService.getBulletinNoticeByUUID(bulletinNotice_uuid);

        String fileName = null;
        if (bulletinNotice==null) {
            response.sendRedirect("/error.jsp?errcode=301");      //\u91c7\u8d2d\u516c\u544a\u4e0d\u5b58\u5728\u9519\u8bef
        } else {
            fileName = bulletinNotice.getReceiveFile();
        }

        String path = InitServer.getProperties().getProperty("main.uploaddir");
        if (!path.endsWith(File.separator)) path = path + File.separator;
        SmartUpload su = new SmartUpload();//\u521b\u5efa\u5bf9\u8c61
        su.initialize(getServletConfig(), request, response);//\u521d\u59cb\u5316
        try {
            su.downloadFile(path + fileName);//\u8def\u5f84\u52a0\u6587\u4ef6\u540d
            su.stop();
            //su.setContentDisposition();
        } catch (SmartUploadException e) {
            e.printStackTrace();
        } finally {
            response.sendRedirect("/users/personinfo.jsp?errcode=501");      //\u62db\u6807\u6587\u4ef6\u4e0b\u8f7d\u6210\u529f
        }
    }

    out.write(_jsp_string1, 0, _jsp_string1.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 8379650030320138497L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("ec/download.jsp"), 2819524371908651659L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
  }
}
